<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is part of the SPFE Open Toolkit. See the accompanying license.txt file for applicable licenses.-->
<!-- (c) Copyright Analecta Communications Inc. 2012 All Rights Reserved. -->
<generic-topic xmlns="http://spfeopentoolkit.org/ns/spfe-docs"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://spfeopentoolkit.org/ns/spfe-docs http://spfeopentoolkit.org/spfe-docs/topic-types/generic-topic/schemas/authoring/generic-topic.xsd">
    <head>
        <id>procedures-demo</id>
        <history>
            <revision>
                <date>2014-12-19-05:00</date>
                <author>mbaker</author>
                <comment>New topic</comment>
                <status>In progress</status>
            </revision>
        </history>
        <index>
            <entry>
                <type>feature</type>
                <term>procedure</term>
            </entry>
            <entry>
                <type>feature</type>
                <term>steps</term>
            </entry>
            <entry>
                <type>eppo-simple-element-name</type>
                <term>procedure</term>
            </entry>
            <entry>
                <type>eppo-simple-element-name</type>
                <term>steps</term>
            </entry>
            <entry>
                <type>eppo-simple-element-name</type>
                <term>step</term>
            </entry>
        </index>
    </head>
    <body>
        <title>Procedures demo</title>
        <p><feature>EPPO-simple</feature> provides two procedure structures. You may choose either
            one or use them both. The two structures are
            <eppo-simple-element-name>procedure</eppo-simple-element-name> and
            <eppo-simple-element-name>instructions</eppo-simple-element-name>. The
            <eppo-simple-element-name>procedure</eppo-simple-element-name> structure is intended for major procedure
            that cover a significantly complicated procedure. Each step in a procedure has a title
            and body, meaning that each step is a significant piece of work. Each step of a
            procedure may itself contain an
                <eppo-simple-element-name>instructions</eppo-simple-element-name> element with the
            detailed steps for completing the <eppo-simple-element-name>procedure</eppo-simple-element-name>
            <eppo-simple-element-name>step</eppo-simple-element-name>. Procedures generally accomplish some business
            process. </p>
        <p>An <eppo-simple-element-name>instructions</eppo-simple-element-name> structure is a simple set of steps
            suitable for a straightforward do-this-then-this method. Instructions generally concern
            the manipulation of a piece of machinery. Instructions are similar to numbered lists,
            but the content model allows more sub-elements than numbered list. (But don't use
            instructions to get round the limit on the content model of a numbered list. Create a
            more permissive version of numbered list if that is what you need.) The following is an
            example of an <eppo-simple-element-name>instructions</eppo-simple-element-name> element:</p>
        <instructions>
            <step>
                <p>Turn on the widget wrangler.</p>
                <p>It is the big red button on the left.</p>
            </step>
            <step>
                <p>Press the green button and hold for five seconds.</p>
            </step>
        </instructions>
        <p>Here is the code for the list above:</p>
        <codeblock>&lt;instructions>
    &lt;step>
        &lt;p>Turn on the widget wrangler.&lt;/p>
        &lt;p>It is the big red button on the left.&lt;/p>
    &lt;/step>
    &lt;step>
        &lt;p>Press the green button and hold for five seconds.&lt;/p>
    &lt;/step>
&lt;/instructions></codeblock>
        <p>A procedure consists of a procedure title followed by an introduction and a set of steps.
            Each step has a title followed by text that elaborates on the step. Optionally, a
            procedure may have the following elements between the introduction and the steps:</p>
        <ul>
            <li>
                <p>An admonitions element containing one or more admonitions.</p>
            </li>
            <li>
                <p>An inputs element containing one or more inputs.</p>
            </li>
        </ul>
        <subhead>Why is there no support for pre-requisites and post-requisites? </subhead>
        <p>In some structured vocabularies, part of the model of a procedure is a set of
            pre-requisites (things you must do before the procedure or things you will need to do
            the procedure) and post requisites (things you can or must do after the procedure). This
            model does not fit with the Every Page is Page One philosophy that topic should be
            self-contained. </p>
        <p>The idea of <quotes>things you need to do before this</quotes> can be re-expressed (more
            precisely) as <quotes>things you need to have in order to do this</quotes>. The
            EPPO-simple procedure model provides an <eppo-simple-element-name>inputs</eppo-simple-element-name>
            structure for this purpose. You can list each of the inputs (materials and tools) that
            the reader will need to complete the procedure. (Think of this like the ingredients list
            for a recipe.) You can use <feature>semantic annotation</feature> within the body of a
            input or output listing, which will generate links to topics that relate to those items,
            thus providing the reader with links to procedures for creating any of the inputs that
            they don't have on hand. </p>
        <p>The idea that there are certain things that you can do after a procedure is usually based
            on one of two ideas. The first is that once you have the output that the procedure
            creates you can do a number of other things. This is not generally a significant use
            case since most readers will do not a procedure at all without some end goal in mind.
            However, by using semantic annotation in the body of an output listing, you will allow
            the build to produce links to any pages that discuss the use of those outputs. The
            second reason for listing post-requisites is to chain procedures into a workflow. This
            is not appropriate in Every Page is Page One design (and tends to hide the fact that a
            workflow exists). A workflow should be expressed using a <concept>workflow
                topic</concept>.</p>
        <p>This is a procedure:</p>
<procedure><title>Blowing down little pigs' houses</title><intro>
        <p>This is how you blow down the house of a little pig.</p>
    </intro><admonitions>
        <warning>
            <title>Do not attempt to blow down a brick house</title>
            <p>Brick houses cannot be blown down by wolf lungs. To blow down a brick house,
                try high explosives.</p>
        </warning>
        <caution>
            <title>Avoid inhaling straw dust</title>
            <p>Blowing down a straw house can create dust which may irritate the lungs. Use
                caution when blowing down straw houses.</p>
        </caution>
    </admonitions><inputs><input><name>Pig's house</name><p>You will need one pig's house
                made of straw or bricks.</p></input><input><name>Wolf</name><p>You will need
                one healthy wolf with a good pair of lungs. </p></input></inputs>
    <outputs>
        <output>
            <name>Pigs</name>
            <p>Once the house is blown down, you will have pigs.</p>
        </output>
    </outputs><steps><step>
            <title>Huff</title>
            <p>To huff:</p>
            <instructions>
                <step>
                    <p>Open mouth.</p>
                </step>
                <step>
                    <p>Draw in air.</p>
                </step>
              </instructions>
        </step>
        <step>
            <title>Puff</title>
            <p>Puff</p>
        </step><step>
            <title>Blow the house down</title>
            <p>Blow the house down.</p>
        </step></steps></procedure>
        <p>Here is the code for the <eppo-simple-element-name>procedure</eppo-simple-element-name>
            above:</p>
        <codeblock>&lt;procedure>
    &lt;title>Blowing down little pigs' houses&lt;/title>
    &lt;intro>
        &lt;p>This is how you blow down the house of a little pig.&lt;/p>
    &lt;/intro>
    &lt;admonitions>
        &lt;warning>
            &lt;title>Do not attempt to blow down a brick house&lt;/title>
            &lt;p>Brick houses cannot be blown down by wolf lungs. To blow down a brick house,
                try high explosives.&lt;/p>
        &lt;/warning>
        &lt;caution>
            &lt;title>Avoid inhaling straw dust&lt;/title>
            &lt;p>Blowing down a straw house can create dust which may irritate the lungs. Use
                caution when blowing down straw houses.&lt;/p>
        &lt;/caution>
    &lt;/admonitions>
    &lt;inputs>
        &lt;input>
            &lt;name>Pig's house&lt;/name>
            &lt;p>You will need one pig's house
                made of straw or bricks.&lt;/p>
        &lt;/input>
        &lt;input>
            &lt;name>Wolf&lt;/name>
            &lt;p>You will need
                one healthy wolf with a good pair of lungs. &lt;/p>
        &lt;/input>
    &lt;/inputs>
    &lt;outputs>
        &lt;output>
            &lt;name>Pigs&lt;/name>
            &lt;p>Once the house is blown down, you will have pigs.&lt;/p>
        &lt;/output>
    &lt;/outputs>
    &lt;steps>
        &lt;step>
            &lt;title>Huff&lt;/title>
            &lt;p>To huff:&lt;/p>
            &lt;instructions>
                &lt;step>
                    &lt;p>Open mouth.&lt;/p>
                &lt;/step>
                &lt;step>
                    &lt;p>Draw in air.&lt;/p>
                &lt;/step>
              &lt;/instructions>
        &lt;/step>
        &lt;step>
            &lt;title>Puff&lt;/title>
            &lt;p>Puff&lt;/p>
        &lt;/step>&lt;step>
            &lt;title>Blow the house down&lt;/title>
            &lt;p>Blow the house down.&lt;/p>
        &lt;/step>
    &lt;/steps>
&lt;/procedure></codeblock>
        <p>Although the procedure above contains an
            <eppo-simple-element-name>instructions</eppo-simple-element-name> element in the first
            step, the <eppo-simple-element-name>instructions</eppo-simple-element-name> element is
            not part of the <eppo-simple-structure-name>procedure</eppo-simple-structure-name>
            structure. Rather, it is in independent structure that is, by default, part of the
                <eppo-simple-group-name>nested-text-structures</eppo-simple-group-name> group. It is
            available in a <eppo-simple-element-name>procedure</eppo-simple-element-name>
            <eppo-simple-element-name>step</eppo-simple-element-name> because the default content
            model of <eppo-simple-element-name>step</eppo-simple-element-name> is the
                <eppo-simple-group-name>nested-text-structures</eppo-simple-group-name> group. </p>
        <section>
            <title>Reasons to develop your own procedure structure</title>
            <p>You might want to develop your own procedure structure if:</p>
            <ul>
                <li>
                    <p>You need a procedure with explicit prerequisite and postrequisite
                        sections.</p>
                </li>
                <li>
                    <p>You want greater semantic formality in the inputs and outputs section. This
                        might involve explicitly defining semantic annotation structures for the
                        inputs and outputs of your procedures and requiring that the terms be listed
                        explicitly, rather than simply accommodated in the text of the description
                        as in the default structure.</p>
                </li>
            </ul>
        </section>
    </body>
</generic-topic>
