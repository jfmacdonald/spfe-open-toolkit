<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is part of the SPFE Open Toolkit. See the accompanying license.txt file for applicable licenses.-->
<!-- (c) Copyright Analecta Communications Inc. 2012 All Rights Reserved. -->
<function-and-template-descriptions
    xmlns="http://spfeopentoolkit.org/spfe-docs/topic-types/function-and-template-reference/schemas/xslt-function-and-template-descriptions"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://spfeopentoolkit.org/spfe-docs/topic-types/function-and-template-reference/schemas/xslt-function-and-template-descriptions http://spfeopentoolkit.org/spfe-docs/topic-types/function-and-template-reference/schemas/xslt-function-and-template-descriptions.xsd">
    <head>
        <id>function-and-template-descriptions</id>
        <virtual-type/>
        <author>mbaker</author>
        <history>
            <revision>
                <date>2012-09-21</date>
                <author>mbaker</author>
                <comment>New document.</comment>
                <status>In progress</status>
            </revision>
        </history>
    </head>
    <body>
        <namespace-uri>http://spfeopentoolkit.org/spfe-ot/1.0/functions</namespace-uri>
        <function-description>
            <name>title2anchor</name>
            <description>
                <p>You can use the <xslt-function-name>title2anchor</xslt-function-name> function to convert a title text into a string that can be used as an anchor value. The function works by changing all characters not allowed in an anchor into underscores.</p>
                <p>Typical uses for this function occur in the presentation stage where you want to create an anchor so that a link can be created to a point inside a topic. Where no other identifier is available, you can use title2anchor to create a suitable anchor value.</p>

            </description>
            <return-value>
                <description>
                    <p>Returns a string in which the characters that would not be legal in an HTML anchor string have been converted to underscores.</p>
                </description>
            </return-value>
            <parameters>
                <parameter>
                    <name>title</name>
                    <description>
                        <p>The title parameter is used to pass in the text of the title that is to be coverted to an anchor string.</p>
                    </description>
                </parameter>
            </parameters>
        </function-description>
        <function-description>
            <name>conditions-met</name>
            <description>
                <p>The <xslt-function-name>conditions-met</xslt-function-name> function is used to determine if a conditional element meets the conditions applied to the build. </p>
            </description>
            <return-value>
                <description>
                    <p>The return value is a boolean with true indicating that the conditions were met and fasle that the conditions were not met.</p>
                </description>
            </return-value>
            <parameters>
                <parameter>
                    <name>conditions</name>
                    <description>
                        <p>The list of conditions applied to the element.</p>
                    </description>
                </parameter>
                <parameter>
                    <name>condition-tokens</name>
                    <description>
                        <p>The list of condition tokens applied to the build.</p>
                    </description>
                </parameter>
            </parameters>
        </function-description>
        <function-description>
            <name>file-name-from-uri</name>
            <description>
                <p>The <xslt-function-name>file-name-from-uri</xslt-function-name> function returns the file name portion of a URI string.</p>
            </description>
            <return-value>
                <description>
                    <p>Returns the file name portion of a URI string.</p>
                </description>
            </return-value>
            <parameters>
                <parameter>
                    <name>uri</name>
                    <description>
                        <p>The URI for which the file name is to be returned.</p>
                    </description>
                </parameter>
            </parameters>
        </function-description>
        <function-description>
            <name>get-file-name-from-path</name>
            <description>
                <p>Returns the file name portion of a local path.</p>
            </description>
            <return-value>
                <description>
                    <p>The file name portion of the path.</p>
                </description>
            </return-value>
            <parameters>
                <parameter>
                    <name>path</name>
                    <description>
                        <p>The path for which the file name is to be returned.</p>
                    </description>
                </parameter>
            </parameters>
        </function-description>
        
        <function-description>
            <name>get-sources</name>
            <description>
                <p>The <xslt-function-name>get-sources</xslt-function-name> is used to load a set of XML source files into a variable. It takes a string value that contains a set of file paths separated by semicolons. The function will fix directory separators charactres in the file paths. You should use the <xslt-function-name>get-sources</xslt-function-name> function to load sourse files, irrespective of whether you are laoding one file or several. This makes your script resiliant if the number of source files should change, and also allows for more flecibity in downstream processes, allowing them to produce one file or many.</p>
            </description>
            <return-value>
                <description>
                    <p>Returns a sequence of XML documents named in the file list.</p>
                </description>
            </return-value>
            <parameters>
                <parameter>
                    <name>file-list</name>
                    <description>
                        <p>A string containing a list of XML file paths separated by semi-colons.</p>
                    </description>
                </parameter>
                <parameter>
                    <name>load-message</name>
                    <description>
                        <p>A string containing an optional message to be displayed by the script when loading a file. If specified, the message will be prepended to the name of each file as it is loaded, and displayed by a call to the <xslt-function-name>info</xslt-function-name> function.</p>
                    </description>
                </parameter>
            </parameters>
        </function-description>
        <function-description>
            <name>longest-string</name>
            <description>
                <p>The <xslt-function-name>longest-string</xslt-function-name> function returns the index of the longest string in a sequence of strings.</p>
            </description>
            <return-value>
                <description>
                    <p>The index of the longest string.</p>
                </description>
            </return-value>
            <parameters>
                <parameter>
                    <name>strings</name>
                    <description>
                        <p>A sequence of strings.</p>
                    </description>
                </parameter>
            </parameters>
        </function-description>
        <function-description>
            <name>path-depth</name>
            <description>
                <p>The <xslt-function-name>path-depth</xslt-function-name> calculates the depth of an XPath by counting the number of elements in the path. It uses tokenize to count but throws away the empty string item that would be created by a leading or trailing slash. Thus <code>foo/bar</code>, <code>/foo/bar</code>, and <code>/foo/bar/</code>, are all counted as having a path depth of 2. Will count a concluding attribute on a path as part of the depth. Presumably works for file paths as well, as long as they are in UNIX form, but it won't distinguish path elements from drive letters or the protocol parts of a URI.</p>
            </description>
            <return-value>
                <description>
                    <p>The number of elements in an XPath expression.</p>
                </description>
            </return-value>
            <parameters>
                <parameter>
                    <name>path</name>
                    <description>
                        <p>The path expression.</p>
                    </description>
                </parameter>
            </parameters>
        </function-description>
        <function-description>
            <name>satisfies-condition</name>
            <description>
                <p>A recursive function that checks a series of conditions against a series of conditiont tokens and returns true if there is a match. It takes account of conditions joined by a plus sign, returning true only if both conditions are satisfied. This is a helper function for the <xslt-function-name>xs:conditions-met</xslt-function-name> function.</p>
            </description>
            <return-value>
                <description>
                    <p>True if the conditions match, otherwise false.</p>
                </description>
            </return-value>
            <parameters>
                <parameter>
                    <name>conditions-list</name>
                    <description>
                        <p>A sequence consisting of conditions attached to an element.</p>
                    </description>
                </parameter>
                <parameter>
                    <name>tokens-list</name>
                    <description>
                        <p>A sequence consisting of the condition tokens specified in the build.</p>
                    </description>
                </parameter>
                <parameter>
                    <name>index</name>
                    <description>
                        <p>The index in the <xslt-function-parameter-name>tokens-list</xslt-function-parameter-name> to check in this recursion.</p>
                    </description>
                </parameter>
            </parameters>
        </function-description>
        <function-description>
            <name>string</name>
            <description>
                <p>The <xslt-function-name>string</xslt-function-name> function is used to resolve <feature>strings</feature>.</p>
            </description>
            <return-value>
                <description>
                    <p>The string that corresponds to the string ID.</p>
                </description>
            </return-value>
            <parameters>
                <parameter>
                    <name>strings</name>
                    <description>
                        <p>A sequence of string elements.</p>
                    </description>
                </parameter>
                <parameter>
                    <name>id</name>
                    <description>
                        <p>The ID of the string to return.</p>
                    </description>
                </parameter>
            </parameters>
        </function-description>
        <template-description>
            <name>error</name>
            <description>
                <p>Used to report an error in a script. The error template terminates the script unless the <code>terminate-on-error</code> parameter is set to false.</p>
            </description>
            <return-value>
                <description>
                    <p></p>
                </description>
            </return-value>
            <parameters>
                <parameter>
                    <name>message</name>
                    <description>
                        <p>The error message to report. The template outputs this message prefixed with "ERROR: ".</p>
                    </description>
                </parameter>
            </parameters>
        </template-description>
    </body>
</function-and-template-descriptions>
